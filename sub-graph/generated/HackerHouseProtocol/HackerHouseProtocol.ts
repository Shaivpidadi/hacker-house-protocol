// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class CoPayersSet extends ethereum.Event {
  get params(): CoPayersSet__Params {
    return new CoPayersSet__Params(this);
  }
}

export class CoPayersSet__Params {
  _event: CoPayersSet;

  constructor(event: CoPayersSet) {
    this._event = event;
  }

  get reservationId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get payers(): Array<Address> {
    return this._event.parameters[1].value.toAddressArray();
  }

  get bps(): Array<i32> {
    return this._event.parameters[2].value.toI32Array();
  }
}

export class EIP712DomainChanged extends ethereum.Event {
  get params(): EIP712DomainChanged__Params {
    return new EIP712DomainChanged__Params(this);
  }
}

export class EIP712DomainChanged__Params {
  _event: EIP712DomainChanged;

  constructor(event: EIP712DomainChanged) {
    this._event = event;
  }
}

export class FundsWithdrawn extends ethereum.Event {
  get params(): FundsWithdrawn__Params {
    return new FundsWithdrawn__Params(this);
  }
}

export class FundsWithdrawn__Params {
  _event: FundsWithdrawn;

  constructor(event: FundsWithdrawn) {
    this._event = event;
  }

  get reservationId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get builderAmount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get protocolFee(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class GuestAdded extends ethereum.Event {
  get params(): GuestAdded__Params {
    return new GuestAdded__Params(this);
  }
}

export class GuestAdded__Params {
  _event: GuestAdded;

  constructor(event: GuestAdded) {
    this._event = event;
  }

  get reservationId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get addedBy(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get guest(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class ListingCreatedBasic extends ethereum.Event {
  get params(): ListingCreatedBasic__Params {
    return new ListingCreatedBasic__Params(this);
  }
}

export class ListingCreatedBasic__Params {
  _event: ListingCreatedBasic;

  constructor(event: ListingCreatedBasic) {
    this._event = event;
  }

  get listingId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get builder(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get paymentToken(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get nameHash(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }

  get locationHash(): Bytes {
    return this._event.parameters[4].value.toBytes();
  }

  get nightlyRate(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get maxGuests(): i32 {
    return this._event.parameters[6].value.toI32();
  }

  get requireProof(): boolean {
    return this._event.parameters[7].value.toBoolean();
  }
}

export class ListingMetadataURISet extends ethereum.Event {
  get params(): ListingMetadataURISet__Params {
    return new ListingMetadataURISet__Params(this);
  }
}

export class ListingMetadataURISet__Params {
  _event: ListingMetadataURISet;

  constructor(event: ListingMetadataURISet) {
    this._event = event;
  }

  get listingId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get metadataURI(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class ListingPrivateDataSet extends ethereum.Event {
  get params(): ListingPrivateDataSet__Params {
    return new ListingPrivateDataSet__Params(this);
  }
}

export class ListingPrivateDataSet__Params {
  _event: ListingPrivateDataSet;

  constructor(event: ListingPrivateDataSet) {
    this._event = event;
  }

  get listingId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get privDataHash(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get encPrivDataCid(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class ListingRequireProofUpdated extends ethereum.Event {
  get params(): ListingRequireProofUpdated__Params {
    return new ListingRequireProofUpdated__Params(this);
  }
}

export class ListingRequireProofUpdated__Params {
  _event: ListingRequireProofUpdated;

  constructor(event: ListingRequireProofUpdated) {
    this._event = event;
  }

  get listingId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get requireProof(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class ListingUpdatedBasic extends ethereum.Event {
  get params(): ListingUpdatedBasic__Params {
    return new ListingUpdatedBasic__Params(this);
  }
}

export class ListingUpdatedBasic__Params {
  _event: ListingUpdatedBasic;

  constructor(event: ListingUpdatedBasic) {
    this._event = event;
  }

  get listingId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get builder(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get paymentToken(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get nameHash(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }

  get locationHash(): Bytes {
    return this._event.parameters[4].value.toBytes();
  }

  get nightlyRate(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get maxGuests(): i32 {
    return this._event.parameters[6].value.toI32();
  }

  get active(): boolean {
    return this._event.parameters[7].value.toBoolean();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ProtocolFeeUpdated extends ethereum.Event {
  get params(): ProtocolFeeUpdated__Params {
    return new ProtocolFeeUpdated__Params(this);
  }
}

export class ProtocolFeeUpdated__Params {
  _event: ProtocolFeeUpdated;

  constructor(event: ProtocolFeeUpdated) {
    this._event = event;
  }

  get feeBps(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ReservationCreated extends ethereum.Event {
  get params(): ReservationCreated__Params {
    return new ReservationCreated__Params(this);
  }
}

export class ReservationCreated__Params {
  _event: ReservationCreated;

  constructor(event: ReservationCreated) {
    this._event = event;
  }

  get reservationId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get listingId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get renter(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get startDate(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get endDate(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get totalDue(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class ReservationFunded extends ethereum.Event {
  get params(): ReservationFunded__Params {
    return new ReservationFunded__Params(this);
  }
}

export class ReservationFunded__Params {
  _event: ReservationFunded;

  constructor(event: ReservationFunded) {
    this._event = event;
  }

  get reservationId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get payer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get newTotalPaid(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get activated(): boolean {
    return this._event.parameters[4].value.toBoolean();
  }
}

export class TreasuryUpdated extends ethereum.Event {
  get params(): TreasuryUpdated__Params {
    return new TreasuryUpdated__Params(this);
  }
}

export class TreasuryUpdated__Params {
  _event: TreasuryUpdated;

  constructor(event: TreasuryUpdated) {
    this._event = event;
  }

  get treasury(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class VerifierUpdated extends ethereum.Event {
  get params(): VerifierUpdated__Params {
    return new VerifierUpdated__Params(this);
  }
}

export class VerifierUpdated__Params {
  _event: VerifierUpdated;

  constructor(event: VerifierUpdated) {
    this._event = event;
  }

  get verifier(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class HackerHouseProtocol__createReservationInputAStruct extends ethereum.Tuple {
  get listingId(): BigInt {
    return this[0].toBigInt();
  }

  get startDate(): BigInt {
    return this[1].toBigInt();
  }

  get endDate(): BigInt {
    return this[2].toBigInt();
  }

  get nights(): BigInt {
    return this[3].toBigInt();
  }

  get payers(): Array<Address> {
    return this[4].toAddressArray();
  }

  get bps(): Array<i32> {
    return this[5].toI32Array();
  }
}

export class HackerHouseProtocol__createReservationInputPStruct extends ethereum.Tuple {
  get expiry(): BigInt {
    return this[0].toBigInt();
  }

  get nonce(): BigInt {
    return this[1].toBigInt();
  }

  get sig(): Bytes {
    return this[2].toBytes();
  }
}

export class HackerHouseProtocol__eip712DomainResult {
  value0: Bytes;
  value1: string;
  value2: string;
  value3: BigInt;
  value4: Address;
  value5: Bytes;
  value6: Array<BigInt>;

  constructor(
    value0: Bytes,
    value1: string,
    value2: string,
    value3: BigInt,
    value4: Address,
    value5: Bytes,
    value6: Array<BigInt>,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromFixedBytes(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromAddress(this.value4));
    map.set("value5", ethereum.Value.fromFixedBytes(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigIntArray(this.value6));
    return map;
  }

  getFields(): Bytes {
    return this.value0;
  }

  getName(): string {
    return this.value1;
  }

  getVersion(): string {
    return this.value2;
  }

  getChainId(): BigInt {
    return this.value3;
  }

  getVerifyingContract(): Address {
    return this.value4;
  }

  getSalt(): Bytes {
    return this.value5;
  }

  getExtensions(): Array<BigInt> {
    return this.value6;
  }
}

export class HackerHouseProtocol__listingsResult {
  value0: Address;
  value1: string;
  value2: string;
  value3: string;
  value4: Address;
  value5: BigInt;
  value6: i32;
  value7: boolean;
  value8: Bytes;
  value9: string;
  value10: boolean;

  constructor(
    value0: Address,
    value1: string,
    value2: string,
    value3: string,
    value4: Address,
    value5: BigInt,
    value6: i32,
    value7: boolean,
    value8: Bytes,
    value9: string,
    value10: boolean,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
    this.value9 = value9;
    this.value10 = value10;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set("value3", ethereum.Value.fromString(this.value3));
    map.set("value4", ethereum.Value.fromAddress(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set(
      "value6",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value6)),
    );
    map.set("value7", ethereum.Value.fromBoolean(this.value7));
    map.set("value8", ethereum.Value.fromFixedBytes(this.value8));
    map.set("value9", ethereum.Value.fromString(this.value9));
    map.set("value10", ethereum.Value.fromBoolean(this.value10));
    return map;
  }

  getBuilder(): Address {
    return this.value0;
  }

  getName(): string {
    return this.value1;
  }

  getLocation(): string {
    return this.value2;
  }

  getMetadataURI(): string {
    return this.value3;
  }

  getPaymentToken(): Address {
    return this.value4;
  }

  getNightlyRate(): BigInt {
    return this.value5;
  }

  getMaxGuests(): i32 {
    return this.value6;
  }

  getActive(): boolean {
    return this.value7;
  }

  getPrivDataHash(): Bytes {
    return this.value8;
  }

  getEncPrivDataCid(): string {
    return this.value9;
  }

  getRequireProof(): boolean {
    return this.value10;
  }
}

export class HackerHouseProtocol__reservationsResult {
  value0: BigInt;
  value1: Address;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;
  value6: boolean;

  constructor(
    value0: BigInt,
    value1: Address,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt,
    value6: boolean,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromBoolean(this.value6));
    return map;
  }

  getListingId(): BigInt {
    return this.value0;
  }

  getRenter(): Address {
    return this.value1;
  }

  getStartDate(): BigInt {
    return this.value2;
  }

  getEndDate(): BigInt {
    return this.value3;
  }

  getTotalDue(): BigInt {
    return this.value4;
  }

  getAmountPaid(): BigInt {
    return this.value5;
  }

  getActive(): boolean {
    return this.value6;
  }
}

export class HackerHouseProtocol extends ethereum.SmartContract {
  static bind(address: Address): HackerHouseProtocol {
    return new HackerHouseProtocol("HackerHouseProtocol", address);
  }

  createListing(
    name: string,
    location: string,
    metadataURI: string,
    paymentToken: Address,
    nightlyRate: BigInt,
    maxGuests: i32,
    privDataHash: Bytes,
    encPrivDataCid: string,
    requireProof: boolean,
  ): BigInt {
    let result = super.call(
      "createListing",
      "createListing(string,string,string,address,uint256,uint8,bytes32,string,bool):(uint256)",
      [
        ethereum.Value.fromString(name),
        ethereum.Value.fromString(location),
        ethereum.Value.fromString(metadataURI),
        ethereum.Value.fromAddress(paymentToken),
        ethereum.Value.fromUnsignedBigInt(nightlyRate),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(maxGuests)),
        ethereum.Value.fromFixedBytes(privDataHash),
        ethereum.Value.fromString(encPrivDataCid),
        ethereum.Value.fromBoolean(requireProof),
      ],
    );

    return result[0].toBigInt();
  }

  try_createListing(
    name: string,
    location: string,
    metadataURI: string,
    paymentToken: Address,
    nightlyRate: BigInt,
    maxGuests: i32,
    privDataHash: Bytes,
    encPrivDataCid: string,
    requireProof: boolean,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "createListing",
      "createListing(string,string,string,address,uint256,uint8,bytes32,string,bool):(uint256)",
      [
        ethereum.Value.fromString(name),
        ethereum.Value.fromString(location),
        ethereum.Value.fromString(metadataURI),
        ethereum.Value.fromAddress(paymentToken),
        ethereum.Value.fromUnsignedBigInt(nightlyRate),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(maxGuests)),
        ethereum.Value.fromFixedBytes(privDataHash),
        ethereum.Value.fromString(encPrivDataCid),
        ethereum.Value.fromBoolean(requireProof),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  createReservation(
    a: HackerHouseProtocol__createReservationInputAStruct,
    p: HackerHouseProtocol__createReservationInputPStruct,
  ): BigInt {
    let result = super.call(
      "createReservation",
      "createReservation((uint256,uint64,uint64,uint256,address[],uint16[]),(uint256,uint256,bytes)):(uint256)",
      [ethereum.Value.fromTuple(a), ethereum.Value.fromTuple(p)],
    );

    return result[0].toBigInt();
  }

  try_createReservation(
    a: HackerHouseProtocol__createReservationInputAStruct,
    p: HackerHouseProtocol__createReservationInputPStruct,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "createReservation",
      "createReservation((uint256,uint64,uint64,uint256,address[],uint16[]),(uint256,uint256,bytes)):(uint256)",
      [ethereum.Value.fromTuple(a), ethereum.Value.fromTuple(p)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  eip712Domain(): HackerHouseProtocol__eip712DomainResult {
    let result = super.call(
      "eip712Domain",
      "eip712Domain():(bytes1,string,string,uint256,address,bytes32,uint256[])",
      [],
    );

    return new HackerHouseProtocol__eip712DomainResult(
      result[0].toBytes(),
      result[1].toString(),
      result[2].toString(),
      result[3].toBigInt(),
      result[4].toAddress(),
      result[5].toBytes(),
      result[6].toBigIntArray(),
    );
  }

  try_eip712Domain(): ethereum.CallResult<HackerHouseProtocol__eip712DomainResult> {
    let result = super.tryCall(
      "eip712Domain",
      "eip712Domain():(bytes1,string,string,uint256,address,bytes32,uint256[])",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new HackerHouseProtocol__eip712DomainResult(
        value[0].toBytes(),
        value[1].toString(),
        value[2].toString(),
        value[3].toBigInt(),
        value[4].toAddress(),
        value[5].toBytes(),
        value[6].toBigIntArray(),
      ),
    );
  }

  getReservationGuests(reservationId: BigInt): Array<Address> {
    let result = super.call(
      "getReservationGuests",
      "getReservationGuests(uint256):(address[])",
      [ethereum.Value.fromUnsignedBigInt(reservationId)],
    );

    return result[0].toAddressArray();
  }

  try_getReservationGuests(
    reservationId: BigInt,
  ): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getReservationGuests",
      "getReservationGuests(uint256):(address[])",
      [ethereum.Value.fromUnsignedBigInt(reservationId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getReservationPayers(reservationId: BigInt): Array<Address> {
    let result = super.call(
      "getReservationPayers",
      "getReservationPayers(uint256):(address[])",
      [ethereum.Value.fromUnsignedBigInt(reservationId)],
    );

    return result[0].toAddressArray();
  }

  try_getReservationPayers(
    reservationId: BigInt,
  ): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getReservationPayers",
      "getReservationPayers(uint256):(address[])",
      [ethereum.Value.fromUnsignedBigInt(reservationId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getReservationSplitsBps(reservationId: BigInt): Array<i32> {
    let result = super.call(
      "getReservationSplitsBps",
      "getReservationSplitsBps(uint256):(uint16[])",
      [ethereum.Value.fromUnsignedBigInt(reservationId)],
    );

    return result[0].toI32Array();
  }

  try_getReservationSplitsBps(
    reservationId: BigInt,
  ): ethereum.CallResult<Array<i32>> {
    let result = super.tryCall(
      "getReservationSplitsBps",
      "getReservationSplitsBps(uint256):(uint16[])",
      [ethereum.Value.fromUnsignedBigInt(reservationId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32Array());
  }

  listings(param0: BigInt): HackerHouseProtocol__listingsResult {
    let result = super.call(
      "listings",
      "listings(uint256):(address,string,string,string,address,uint256,uint8,bool,bytes32,string,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );

    return new HackerHouseProtocol__listingsResult(
      result[0].toAddress(),
      result[1].toString(),
      result[2].toString(),
      result[3].toString(),
      result[4].toAddress(),
      result[5].toBigInt(),
      result[6].toI32(),
      result[7].toBoolean(),
      result[8].toBytes(),
      result[9].toString(),
      result[10].toBoolean(),
    );
  }

  try_listings(
    param0: BigInt,
  ): ethereum.CallResult<HackerHouseProtocol__listingsResult> {
    let result = super.tryCall(
      "listings",
      "listings(uint256):(address,string,string,string,address,uint256,uint8,bool,bytes32,string,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new HackerHouseProtocol__listingsResult(
        value[0].toAddress(),
        value[1].toString(),
        value[2].toString(),
        value[3].toString(),
        value[4].toAddress(),
        value[5].toBigInt(),
        value[6].toI32(),
        value[7].toBoolean(),
        value[8].toBytes(),
        value[9].toString(),
        value[10].toBoolean(),
      ),
    );
  }

  nextListingId(): BigInt {
    let result = super.call("nextListingId", "nextListingId():(uint256)", []);

    return result[0].toBigInt();
  }

  try_nextListingId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "nextListingId",
      "nextListingId():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  nextReservationId(): BigInt {
    let result = super.call(
      "nextReservationId",
      "nextReservationId():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_nextReservationId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "nextReservationId",
      "nextReservationId():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  protocolFeeBps(): BigInt {
    let result = super.call("protocolFeeBps", "protocolFeeBps():(uint96)", []);

    return result[0].toBigInt();
  }

  try_protocolFeeBps(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "protocolFeeBps",
      "protocolFeeBps():(uint96)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  reservations(param0: BigInt): HackerHouseProtocol__reservationsResult {
    let result = super.call(
      "reservations",
      "reservations(uint256):(uint256,address,uint64,uint64,uint256,uint256,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );

    return new HackerHouseProtocol__reservationsResult(
      result[0].toBigInt(),
      result[1].toAddress(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toBoolean(),
    );
  }

  try_reservations(
    param0: BigInt,
  ): ethereum.CallResult<HackerHouseProtocol__reservationsResult> {
    let result = super.tryCall(
      "reservations",
      "reservations(uint256):(uint256,address,uint64,uint64,uint256,uint256,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new HackerHouseProtocol__reservationsResult(
        value[0].toBigInt(),
        value[1].toAddress(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt(),
        value[6].toBoolean(),
      ),
    );
  }

  treasury(): Address {
    let result = super.call("treasury", "treasury():(address)", []);

    return result[0].toAddress();
  }

  try_treasury(): ethereum.CallResult<Address> {
    let result = super.tryCall("treasury", "treasury():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  usedProof(param0: Bytes): boolean {
    let result = super.call("usedProof", "usedProof(bytes32):(bool)", [
      ethereum.Value.fromFixedBytes(param0),
    ]);

    return result[0].toBoolean();
  }

  try_usedProof(param0: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall("usedProof", "usedProof(bytes32):(bool)", [
      ethereum.Value.fromFixedBytes(param0),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  verifier(): Address {
    let result = super.call("verifier", "verifier():(address)", []);

    return result[0].toAddress();
  }

  try_verifier(): ethereum.CallResult<Address> {
    let result = super.tryCall("verifier", "verifier():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _treasury(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddGuestCall extends ethereum.Call {
  get inputs(): AddGuestCall__Inputs {
    return new AddGuestCall__Inputs(this);
  }

  get outputs(): AddGuestCall__Outputs {
    return new AddGuestCall__Outputs(this);
  }
}

export class AddGuestCall__Inputs {
  _call: AddGuestCall;

  constructor(call: AddGuestCall) {
    this._call = call;
  }

  get reservationId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get guest(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class AddGuestCall__Outputs {
  _call: AddGuestCall;

  constructor(call: AddGuestCall) {
    this._call = call;
  }
}

export class CreateListingCall extends ethereum.Call {
  get inputs(): CreateListingCall__Inputs {
    return new CreateListingCall__Inputs(this);
  }

  get outputs(): CreateListingCall__Outputs {
    return new CreateListingCall__Outputs(this);
  }
}

export class CreateListingCall__Inputs {
  _call: CreateListingCall;

  constructor(call: CreateListingCall) {
    this._call = call;
  }

  get name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get location(): string {
    return this._call.inputValues[1].value.toString();
  }

  get metadataURI(): string {
    return this._call.inputValues[2].value.toString();
  }

  get paymentToken(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get nightlyRate(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get maxGuests(): i32 {
    return this._call.inputValues[5].value.toI32();
  }

  get privDataHash(): Bytes {
    return this._call.inputValues[6].value.toBytes();
  }

  get encPrivDataCid(): string {
    return this._call.inputValues[7].value.toString();
  }

  get requireProof(): boolean {
    return this._call.inputValues[8].value.toBoolean();
  }
}

export class CreateListingCall__Outputs {
  _call: CreateListingCall;

  constructor(call: CreateListingCall) {
    this._call = call;
  }

  get id(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class CreateReservationCall extends ethereum.Call {
  get inputs(): CreateReservationCall__Inputs {
    return new CreateReservationCall__Inputs(this);
  }

  get outputs(): CreateReservationCall__Outputs {
    return new CreateReservationCall__Outputs(this);
  }
}

export class CreateReservationCall__Inputs {
  _call: CreateReservationCall;

  constructor(call: CreateReservationCall) {
    this._call = call;
  }

  get a(): CreateReservationCallAStruct {
    return changetype<CreateReservationCallAStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }

  get p(): CreateReservationCallPStruct {
    return changetype<CreateReservationCallPStruct>(
      this._call.inputValues[1].value.toTuple(),
    );
  }
}

export class CreateReservationCall__Outputs {
  _call: CreateReservationCall;

  constructor(call: CreateReservationCall) {
    this._call = call;
  }

  get rid(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class CreateReservationCallAStruct extends ethereum.Tuple {
  get listingId(): BigInt {
    return this[0].toBigInt();
  }

  get startDate(): BigInt {
    return this[1].toBigInt();
  }

  get endDate(): BigInt {
    return this[2].toBigInt();
  }

  get nights(): BigInt {
    return this[3].toBigInt();
  }

  get payers(): Array<Address> {
    return this[4].toAddressArray();
  }

  get bps(): Array<i32> {
    return this[5].toI32Array();
  }
}

export class CreateReservationCallPStruct extends ethereum.Tuple {
  get expiry(): BigInt {
    return this[0].toBigInt();
  }

  get nonce(): BigInt {
    return this[1].toBigInt();
  }

  get sig(): Bytes {
    return this[2].toBytes();
  }
}

export class FundReservationCall extends ethereum.Call {
  get inputs(): FundReservationCall__Inputs {
    return new FundReservationCall__Inputs(this);
  }

  get outputs(): FundReservationCall__Outputs {
    return new FundReservationCall__Outputs(this);
  }
}

export class FundReservationCall__Inputs {
  _call: FundReservationCall;

  constructor(call: FundReservationCall) {
    this._call = call;
  }

  get reservationId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class FundReservationCall__Outputs {
  _call: FundReservationCall;

  constructor(call: FundReservationCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetProtocolFeeBpsCall extends ethereum.Call {
  get inputs(): SetProtocolFeeBpsCall__Inputs {
    return new SetProtocolFeeBpsCall__Inputs(this);
  }

  get outputs(): SetProtocolFeeBpsCall__Outputs {
    return new SetProtocolFeeBpsCall__Outputs(this);
  }
}

export class SetProtocolFeeBpsCall__Inputs {
  _call: SetProtocolFeeBpsCall;

  constructor(call: SetProtocolFeeBpsCall) {
    this._call = call;
  }

  get _bps(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetProtocolFeeBpsCall__Outputs {
  _call: SetProtocolFeeBpsCall;

  constructor(call: SetProtocolFeeBpsCall) {
    this._call = call;
  }
}

export class SetTreasuryCall extends ethereum.Call {
  get inputs(): SetTreasuryCall__Inputs {
    return new SetTreasuryCall__Inputs(this);
  }

  get outputs(): SetTreasuryCall__Outputs {
    return new SetTreasuryCall__Outputs(this);
  }
}

export class SetTreasuryCall__Inputs {
  _call: SetTreasuryCall;

  constructor(call: SetTreasuryCall) {
    this._call = call;
  }

  get _treasury(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetTreasuryCall__Outputs {
  _call: SetTreasuryCall;

  constructor(call: SetTreasuryCall) {
    this._call = call;
  }
}

export class SetVerifierCall extends ethereum.Call {
  get inputs(): SetVerifierCall__Inputs {
    return new SetVerifierCall__Inputs(this);
  }

  get outputs(): SetVerifierCall__Outputs {
    return new SetVerifierCall__Outputs(this);
  }
}

export class SetVerifierCall__Inputs {
  _call: SetVerifierCall;

  constructor(call: SetVerifierCall) {
    this._call = call;
  }

  get v(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetVerifierCall__Outputs {
  _call: SetVerifierCall;

  constructor(call: SetVerifierCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpdateListingCall extends ethereum.Call {
  get inputs(): UpdateListingCall__Inputs {
    return new UpdateListingCall__Inputs(this);
  }

  get outputs(): UpdateListingCall__Outputs {
    return new UpdateListingCall__Outputs(this);
  }
}

export class UpdateListingCall__Inputs {
  _call: UpdateListingCall;

  constructor(call: UpdateListingCall) {
    this._call = call;
  }

  get listingId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get name(): string {
    return this._call.inputValues[1].value.toString();
  }

  get location(): string {
    return this._call.inputValues[2].value.toString();
  }

  get metadataURI(): string {
    return this._call.inputValues[3].value.toString();
  }

  get paymentToken(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get nightlyRate(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get maxGuests(): i32 {
    return this._call.inputValues[6].value.toI32();
  }

  get active(): boolean {
    return this._call.inputValues[7].value.toBoolean();
  }
}

export class UpdateListingCall__Outputs {
  _call: UpdateListingCall;

  constructor(call: UpdateListingCall) {
    this._call = call;
  }
}

export class UpdateListingPrivateDataCall extends ethereum.Call {
  get inputs(): UpdateListingPrivateDataCall__Inputs {
    return new UpdateListingPrivateDataCall__Inputs(this);
  }

  get outputs(): UpdateListingPrivateDataCall__Outputs {
    return new UpdateListingPrivateDataCall__Outputs(this);
  }
}

export class UpdateListingPrivateDataCall__Inputs {
  _call: UpdateListingPrivateDataCall;

  constructor(call: UpdateListingPrivateDataCall) {
    this._call = call;
  }

  get listingId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get privDataHash(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get encPrivDataCid(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class UpdateListingPrivateDataCall__Outputs {
  _call: UpdateListingPrivateDataCall;

  constructor(call: UpdateListingPrivateDataCall) {
    this._call = call;
  }
}

export class UpdateListingRequireProofCall extends ethereum.Call {
  get inputs(): UpdateListingRequireProofCall__Inputs {
    return new UpdateListingRequireProofCall__Inputs(this);
  }

  get outputs(): UpdateListingRequireProofCall__Outputs {
    return new UpdateListingRequireProofCall__Outputs(this);
  }
}

export class UpdateListingRequireProofCall__Inputs {
  _call: UpdateListingRequireProofCall;

  constructor(call: UpdateListingRequireProofCall) {
    this._call = call;
  }

  get listingId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get requireProof(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class UpdateListingRequireProofCall__Outputs {
  _call: UpdateListingRequireProofCall;

  constructor(call: UpdateListingRequireProofCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get reservationId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}
