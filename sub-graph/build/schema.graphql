type CoPayersSet @entity(immutable: true) {
  id: Bytes!
  reservationId: BigInt! # uint256
  payers: [Bytes!]! # address[]
  bps: [Int!]! # uint16[]
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type EIP712DomainChanged @entity(immutable: true) {
  id: Bytes!

  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type FundsWithdrawn @entity(immutable: true) {
  id: Bytes!
  reservationId: BigInt! # uint256
  to: Bytes! # address
  builderAmount: BigInt! # uint256
  protocolFee: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type GuestAdded @entity(immutable: true) {
  id: Bytes!
  reservationId: BigInt! # uint256
  addedBy: Bytes! # address
  guest: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ListingCreatedBasic @entity(immutable: true) {
  id: Bytes!
  listingId: BigInt! # uint256
  builder: Bytes! # address
  paymentToken: Bytes! # address
  nameHash: Bytes! # bytes32
  locationHash: Bytes! # bytes32
  nightlyRate: BigInt! # uint256
  maxGuests: Int! # uint8
  requireProof: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ListingMetadataURISet @entity(immutable: true) {
  id: Bytes!
  listingId: BigInt! # uint256
  metadataURI: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ListingPrivateDataSet @entity(immutable: true) {
  id: Bytes!
  listingId: BigInt! # uint256
  privDataHash: Bytes! # bytes32
  encPrivDataCid: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ListingRequireProofUpdated @entity(immutable: true) {
  id: Bytes!
  listingId: BigInt! # uint256
  requireProof: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ListingUpdatedBasic @entity(immutable: true) {
  id: Bytes!
  listingId: BigInt! # uint256
  builder: Bytes! # address
  paymentToken: Bytes! # address
  nameHash: Bytes! # bytes32
  locationHash: Bytes! # bytes32
  nightlyRate: BigInt! # uint256
  maxGuests: Int! # uint8
  active: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ProtocolFeeUpdated @entity(immutable: true) {
  id: Bytes!
  feeBps: BigInt! # uint96
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ReservationCreated @entity(immutable: true) {
  id: Bytes!
  reservationId: BigInt! # uint256
  listingId: BigInt! # uint256
  renter: Bytes! # address
  startDate: BigInt! # uint64
  endDate: BigInt! # uint64
  totalDue: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ReservationFunded @entity(immutable: true) {
  id: Bytes!
  reservationId: BigInt! # uint256
  payer: Bytes! # address
  amount: BigInt! # uint256
  newTotalPaid: BigInt! # uint256
  activated: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TreasuryUpdated @entity(immutable: true) {
  id: Bytes!
  treasury: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type VerifierUpdated @entity(immutable: true) {
  id: Bytes!
  verifier: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
